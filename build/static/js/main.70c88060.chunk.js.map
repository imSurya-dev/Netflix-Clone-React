{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","images/profile.png","Nav.js","images/linkedin.svg","images/github-sign.svg","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundPosition","backgroundImage","original_name","overview","substr","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","profile","Footer","href","target","rel","linkedin","github","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70c88060.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3'\n});\n\nexport default instance;\n\n","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.scss\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n\n    //snippet code to run based on specific conditions\n    useEffect(() => {\n        // empty brackets means run the function once and dont run it again\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"row__title\">\n                {title}\n            </h2>\n            <div className=\"row__posters\">\n                {movies.map((movie) => {\n                    return <img key={movie.id} className={`${isLargeRow && 'row__posterLarge'} row__poster`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default Row;","// You can generate your own API Key from TMDB Website.\nconst API_KEY = \"59c5038f6e8e55b63bbdd669c0b22651\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}& language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}& with_genres=99`,\n}\n\nexport default requests;\n","import React, { useEffect, useState } from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.scss'\n\nfunction Banner() {\n\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n        };\n        fetchData();\n    }, []);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + '...' : str;\n    }\n\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize: 'cover',\n                backgroundPosition: 'top',\n                backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`\n            }}\n        >\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n            <div className=\"banner--fadeBottom\" />\n        </header>\n    )\n}\n\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/profile.544501e2.png\";","import React, { useEffect, useState } from 'react';\nimport './Nav.scss';\nimport profile from './images/profile.png';\n\nfunction Nav() {\n\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 100) {\n                setShow(true);\n            }\n            else {\n                setShow(false);\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n    }, [])\n\n    return (\n        <div className={`nav ${show && 'nav__black'}`}>\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix Logo\" />\n            <img className=\"nav__avatar\" src={profile} alt=\"Profile\" />\n        </div>\n    )\n}\n\nexport default Nav\n","export default __webpack_public_path__ + \"static/media/linkedin.05edcf24.svg\";","export default __webpack_public_path__ + \"static/media/github-sign.0c1dc6eb.svg\";","import React from 'react';\nimport linkedin from './images/linkedin.svg';\nimport github from './images/github-sign.svg';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            {/* Github and Linkedin Page Icons */}\n            <div className=\"footer__social\">\n                <a href=\"https://www.linkedin.com/in/suryatejatammana/\" target=\"_blank\" rel=\"noreferrer\">\n                    <img src={linkedin} alt=\"linkedin-logo\" />\n                </a>\n                <a href=\"https://github.com/imSurya-dev\" target=\"_blank\" rel=\"noreferrer\" >\n                    <img src={github} alt=\"github-logo\" />\n                </a>\n\n            </div>\n            {/* Portfolio Page */}\n            <div className=\"footer__portfolio\">\n                <a href=\"http://surya-teja.surge.sh\" target=\"_blank\" rel=\"noreferrer\" >Checkout My Portfolio</a>\n            </div>\n            <div>\n                Developed by Surya Teja Tammana\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import './App.scss';\nimport Row from './Row';\nimport requests from './requests.js';\nimport Banner from './Banner';\nimport Nav from './Nav';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow ></Row>\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} ></Row>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} ></Row>\n      <Row title=\"Action\" fetchUrl={requests.fetchActionMovies} ></Row>\n      <Row title=\"Comedy\" fetchUrl={requests.fetchComedyMovies} ></Row>\n      <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies} ></Row>\n      <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies} ></Row>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} ></Row>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}